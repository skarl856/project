package com.project.god.admin.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.project.god.domain.CategoryVO;
import com.project.god.domain.PageVO;
import com.project.god.domain.ProductVO;
import com.project.god.service.ProductService;

import lombok.extern.slf4j.Slf4j;
import net.sf.json.JSONArray;

/**
 * admin product list
 * 
 * @author god
 *
 */

@Controller
@Slf4j
@RequestMapping("/admin")
public class ProductListController {
	
	@Autowired
	ProductService productService;
	
	// 상품 리스트
	@RequestMapping(value="/admin_product_list.do/{page}", method=RequestMethod.GET)
	public String productList(@PathVariable("page") int page, Model model) throws Exception {
		
		log.info("상품 리스트");
		
		int limit = 5; // 페이지당 글수
		
		List<ProductVO> productList;
		List<CategoryVO> categoryList = null;
		
		page = page!=0 ? page : 1; // page 설정

		// 총 상품 개수
		int productListCount = productService.getProductListCount();
		
		productList = productService.getProductList(page, limit);
		
		categoryList = productService.getCategoryList();
		
		// 총 페이지 수
   		int maxPage=(int)((double)productListCount/limit+0.95); //0.95를 더해서 올림 처리
   		
		// 현재 페이지에 보여줄 시작 페이지 수 (1, 11, 21,...)
   		int startPage = (((int) ((double)page / 10 + 0.9)) - 1) * 10 + 1;
   		
		// 현재 페이지에 보여줄 마지막 페이지 수(10, 20, 30, ...)
   	    int endPage = startPage + 10 - 1;
   	    
   	    if (endPage> maxPage) endPage= maxPage;
   	    
   	    PageVO pageVO = new PageVO();
		pageVO.setEndPage(endPage);
		pageVO.setProductListCount(productList.size());
		pageVO.setMaxPage(maxPage);
		pageVO.setPage(page);
		pageVO.setStartPage(startPage);
		pageVO.setProductListTotCount(productListCount);
		
		log.info("PageVO : " + pageVO);
		
		model.addAttribute("pageVO", pageVO);
		model.addAttribute("productList", productList);
		model.addAttribute("categoryList", JSONArray.fromObject(categoryList));
		
		log.info("productList : " + productList);
		
		log.info("categoryList : " + categoryList);
		
		return "/admin/admin_product_list";
	}
	
	// 상품 리스트 검색 상품 보기
	@RequestMapping("/productListbySearch.do")
	public String productListbySearch(@RequestParam(value="page", defaultValue="1") int page,
								  	  @RequestParam("search_kind") String searchKind,
								  	  @RequestParam("search_word") String searchWord, Model model) {
		
		log.info("########## 검색 상품 보기");
		
		int limit = 5; // 페이지당 글수
		List<ProductVO> productList;
		
		// page = page!=0 ? page : 1; // page 설정
		
		// 총 상품 개수
		int productListTotCount = productService.getProductListCount();

		// 총 게시글 & 총 게시글 수 
		productList = productService.getProductBySearch(searchKind, searchWord.trim(), limit, page);
		
		int productListCount = productService.getAllProductsBySearch(searchKind, searchWord);
		
		log.info("검색 상품 수 : {}", productListCount);
		
		// 총 페이지 수
   		int maxPage=(int)((double)productListCount/limit+0.95); //0.95를 더해서 올림 처리
		// 현재 페이지에 보여줄 시작 페이지 수 (1, 11, 21,...)
   		int startPage = (((int) ((double)page / 10 + 0.9)) - 1) * 10 + 1;
		// 현재 페이지에 보여줄 마지막 페이지 수(10, 20, 30, ...)
   	    int endPage = startPage + 10 - 1;
   	    
   	    if (endPage> maxPage) endPage= maxPage;
   	    
   	    PageVO pageVO = new PageVO();
		pageVO.setEndPage(endPage);
		pageVO.setProductListCount(productList.size());
		pageVO.setMaxPage(maxPage);
		pageVO.setPage(page);
		pageVO.setStartPage(startPage);
		pageVO.setProductListTotCount(productListTotCount);
		
		model.addAttribute("pageVO", pageVO);
		model.addAttribute("productList", productList);
		
		// 추가 : 페이징 부분에서 검색 페이지 주소 반영위한 플래그 변수
		// 검색어 재전송
		model.addAttribute("search_YN", "search");
		model.addAttribute("search_kind", searchKind);
		model.addAttribute("search_word", searchWord);
		
		return "/admin/admin_product_list";
	}

}
