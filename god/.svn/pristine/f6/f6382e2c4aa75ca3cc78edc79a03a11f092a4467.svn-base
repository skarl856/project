package com.project.god.dao;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.project.god.domain.CategoryVO;
import com.project.god.domain.ProductVO;
import com.project.god.mapper.ProductMapper;

import lombok.extern.slf4j.Slf4j;

@Repository
@Slf4j
public class ProductDAOImpl implements ProductDAO {
	
	@Autowired
	private SqlSession sqlSession;
	
	private static String namespace = "com.project.god.mapper.ProductMapper";
	
	// Product 상품등록
	@Override
	public void regiProduct(ProductVO productVO) throws Exception {

		log.info("dao regiProduct");
		
		sqlSession.getMapper(ProductMapper.class).regiProduct(productVO);
		
	}
	
	@Override
	public int getProductIdByLastSeq() {

		log.info("dao getProductIdByLastSeq");
		return sqlSession.getMapper(ProductMapper.class).getProductIdByLastSeq();
	}	
		
	// 상품 리스트
	@Override
	public List<ProductVO> getProductList(int page, int rowsPerPage) {
		
		log.info("dao getProductList");
		return sqlSession.getMapper(ProductMapper.class).getProductList(page, rowsPerPage);
	}
	
	// 상품 보기
	@Override
	public ProductVO getProduct(int productId) throws Exception {
		
		log.info("dao getProduct");
		return sqlSession.selectOne(namespace + ".getProduct", productId);
	}
	
	// 전체 상품 수
	@Override
	public int getProductListCount() {

		log.info("dao getProductListCount");
		return sqlSession.getMapper(ProductMapper.class).getProductListCount();
	}
	
	// 카테고리별 전체 상품 수
	@Override
	public int getCateProductListCount(String cateCode) {

		log.info("dao getCateProductListCount");
		return sqlSession.getMapper(ProductMapper.class).getCateProductListCount(cateCode);
	}

	
	@Override
	public List<ProductVO> getProductBySearch(String searchKind, 
									  	  	  String searchWord, 
									  	  	  int rowsPerPage, 
									  	  	  int page) {

		log.info("dao getProductBySearch");
		log.info("검색 구분 : {}", searchKind);
		log.info("검색어 : {}", searchWord);
		
		return sqlSession.getMapper(ProductMapper.class).getProductBySearch(searchKind, searchWord, rowsPerPage, page);
	}

	@Override
	public int getAllProductsBySearch(String searchKind, String searchWord) {
		
		log.info("dao getAllProductsBySearch");
		log.info("검색 구분 : {}", searchKind);
		log.info("검색어 : {}", searchWord);
		
		return sqlSession.getMapper(ProductMapper.class).getAllProductsBySearch(searchKind, searchWord);
	}
	
	// 카테고리 목록
	@Override
	public List<CategoryVO> getCategoryList() throws Exception {

		log.info("dao getCategoryList");
		
		return sqlSession.selectList(namespace + ".getCategoryList");
	}
	
	// 카테고리 등록
	@Override
	public boolean insertCategory(ProductVO productVO) {

		log.info("dao insertCategory");
		boolean flag = false;
		
		try {
			sqlSession.insert("product.insertCategory");
			flag = true;
		} catch (Exception e) {
			e.printStackTrace();
		} 
		
		return flag;
	}
	
	// FAQ 게시글 삭제
	@Override
	public void deleteCategory(String productKind2) throws Exception {

		log.info("dao deleteCategory");
		
		sqlSession.delete("product.deleteCategory", productKind2);
	}

	@Override
	public List<ProductVO> getCateProductList(int page, int rowsPerPage, String cateCode) throws Exception {
		
		log.info("dao getCateProductList");
		
		return sqlSession.getMapper(ProductMapper.class).getCateProductList(page, rowsPerPage, cateCode);
	}

}
